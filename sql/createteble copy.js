const db = require("./sqlite");

const CreateTable = () => {
  db.run(`CREATE TABLE IF NOT EXISTS company (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
    CommercialRegistrationNumber INTEGER NOT NULL,
        BuildingNumber INTEGER NOT NULL,StreetName TEXT NOT NULL,
        NeighborhoodName TEXT NOT NULL, PostalCode TEXT NOT NULL, City TEXT NOT NULL,Country TEXT NOT NULL,TaxNumber INTEGER NOT NULL,Email TEXT NOT NULL,
        Password TEXT NOT NULL ,PhoneNumber TEXT NOT NULL,NumberOFbranchesAllowed INTEGER NOT NULL , NumberOFcurrentBranches INTEGER NOT NULL,SubscriptionStartDate DATE NULL DEFAULT CURRENT_DATE,SubscriptionEndDate DATE NULL
      )`);

  db.run(`CREATE TABLE IF NOT EXISTS companySub (
    id INTEGER PRIMARY KEY AUTOINCREMENT,NumberCompany INTEGER NOT NULL ,NameSub TEXT NOT NULL,BranchAddress TEXT NOT NULL,Email TEXT NOT NULL,PhoneNumber TEXT NOT NULL,FOREIGN KEY (NumberCompany) REFERENCES company (id) ON DELETE RESTRICT ON UPDATE RESTRICT 
  )`);

  db.run(
    `CREATE TABLE IF NOT EXISTS usersCompany(id INTEGER PRIMARY KEY AUTOINCREMENT,IDCompany INTEGER NOT NULL,userName TEXT NOT NULL, IDNumber INTEGER NOT NULL,PhoneNumber TEXT NOT NULL, image TEXT NULL , DateOFjoin DATE NULL DEFAULT CURRENT_DATE,Activation NULL DEFAULT 'true',FOREIGN KEY (IDCompany) REFERENCES company (id) ON DELETE RESTRICT ON UPDATE RESTRICT )`
  );
  db.run(
    `CREATE TABLE IF NOT EXISTS usersCompanySub(id INTEGER PRIMARY KEY AUTOINCREMENT,IDuser INTEGER NOT NULL,IDcompanySub INTEGER NOT NULL, IDproject INTEGER NOT NULL,job TEXT NOT NULL, Validity JSON NULL,FOREIGN KEY (IDuser) REFERENCES usersCompany (id) ON DELETE RESTRICT ON UPDATE RESTRICT,FOREIGN KEY (IDcompanySub) REFERENCES companySub (id) ON DELETE RESTRICT ON UPDATE RESTRICT,FOREIGN KEY (IDproject) REFERENCES companySubprojects (id) ON DELETE RESTRICT ON UPDATE RESTRICT )`
  );
  db.run(
    `CREATE TABLE IF NOT EXISTS companySubprojects(id INTEGER PRIMARY KEY AUTOINCREMENT,IDcompanySub INTEGER NOT NULL,Nameproject TEXT NOT NULL, Note TEXT NULL,TypeOFContract TEXT NOT NULL, GuardNumber INTEGER NULL ,LocationProject TEXT NULL , ProjectStartdate DATE NULL ,Imageproject TEXT NULL,FOREIGN KEY (IDcompanySub) REFERENCES companySub (id) ON DELETE RESTRICT ON UPDATE RESTRICT)`
  );

  // templet ****************************************
  db.run(
    `CREATE TABLE IF NOT EXISTS StagesTemplet(StageID INTEGER PRIMARY KEY AUTOINCREMENT,Type nvarchar[50] NULL,StageName nvarchar[max] NULL, Days INTEGER NULL,StartDate TEXT NOT NULL, EndDate INTEGER NULL ,CloseDate TEXT NULL , OrderBy INTEGER NULL ,Difference decimal NULL)`
  );

  db.run(
    `CREATE TABLE IF NOT EXISTS StagesSubTemplet(StageSubID INTEGER PRIMARY KEY AUTOINCREMENT,StageID INTEGER NULL,ProjectID INTEGER NULL ,StageSubName nvarchar[max] NULL,ImageAttachment TEXT NULL , CloseDate TEXT NULL)`
  );



// CUSTOMER TEBLE*************************************
  db.run(
    `CREATE TABLE IF NOT EXISTS StagesCUST(StageCustID INTEGER PRIMARY KEY AUTOINCREMENT,StageID INTEGER  NULL ,ProjectID INTEGER NULL ,Type INTEGER NOT NULL,StageName TEXT NOT NULL, Days INTEGER NULL,StartDate TEXT NOT NULL, EndDate INTEGER NULL ,CloseDate TEXT NULL , OrderBy INTEGER NULL ,Difference decimal NULL,FOREIGN KEY (ProjectID) REFERENCES companySubprojects (id) ON DELETE RESTRICT ON UPDATE RESTRICT)`
  );
  db.run(
    `CREATE TABLE IF NOT EXISTS StageNotes(StageNoteID INTEGER PRIMARY KEY AUTOINCREMENT,StagHOMID INTEGER  NULL ,ProjectID INTEGER NULL ,Type nvarchar[50] NULL,Note nvarchar[max] NULL, DateNote NULL DEFAULT CURRENT_DATE,
      RecordedBy nvarchar[50] NULL, UpdatedDate NULL DEFAULT CURRENT_DATE ,countdayDelay INTEGER NULL ,ImageAttachment TEXT NULL ,FOREIGN KEY (ProjectID) REFERENCES companySubprojects (id) ON DELETE RESTRICT ON UPDATE RESTRICT,FOREIGN KEY (StagHOMID) REFERENCES StagesCUST (StageID) ON DELETE RESTRICT ON UPDATE RESTRICT)`
  );
  db.run(
    `CREATE TABLE IF NOT EXISTS StagesSub(StageSubID INTEGER PRIMARY KEY AUTOINCREMENT,StagHOMID INTEGER NULL,ProjectID INTEGER NULL ,StageSubName nvarchar[max] NULL,ImageAttachment TEXT NULL , CloseDate TEXT NULL,FOREIGN KEY (StagHOMID) REFERENCES StagesCUST (StageID) ON DELETE RESTRICT ON UPDATE RESTRICT,FOREIGN KEY (ProjectID) REFERENCES companySubprojects (id) ON DELETE RESTRICT ON UPDATE RESTRICT )`
  );
  db.run(
    `CREATE TABLE IF NOT EXISTS StageSubNotes(StageSubNoteID INTEGER PRIMARY KEY AUTOINCREMENT,StagSubHOMID INTEGER  NULL ,StagHOMID INTEGER NULL ,ProjectID INTEGER NULL,Type nvarchar[50] NULL,Note nvarchar[max] NULL, DateNote NULL DEFAULT CURRENT_DATE,
      RecordedBy nvarchar[50] NULL, UpdatedDate NULL DEFAULT CURRENT_DATE ,countdayDelay INTEGER NULL ,ImageAttachment TEXT NULL ,FOREIGN KEY (StagSubHOMID) REFERENCES StagesSub (StageSubID) ON DELETE RESTRICT ON UPDATE RESTRICT,FOREIGN KEY (StagHOMID) REFERENCES StagesCUST (StageID) ON DELETE RESTRICT ON UPDATE RESTRICT)`
  );

  //  مصروفات
  db.run(
    `CREATE TABLE IF NOT EXISTS Expense(Expenseid INTEGER PRIMARY KEY AUTOINCREMENT, CustID INTEGER ,Amount DECIMAL, Date DATE NULL DEFAULT CURRENT_DATE , Data nvarchar[max] NULL, ClassificationName TEXT NULL , Image TEXT NULL, InvoiceNo INTEGER NULL, Taxable nvarchar[10] NULL ,CreatedDate NULL DEFAULT CURRENT_DATE , FOREIGN KEY (CustID) REFERENCES companySubprojects (id) ON DELETE RESTRICT ON UPDATE RESTRICT) `
  )
};

module.exports = CreateTable;
